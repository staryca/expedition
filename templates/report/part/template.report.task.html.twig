<div class="d-none" id="createNewReportTaskTemplate">
    <p id="edit_BLOCK_INDEX_Task_TASK_ID">
        TASK_TYPE
        TASK_CONTENT
        TASK_INFORMANT
        <button type="submit" class="btn btn-danger" data-index="TASK_ID" data-block="BLOCK_INDEX">Выдаліць</button>
    </p>
</div>

<script type="application/javascript">
    function addActionReportTask(element) {
        const id = element.getAttribute('data-index')
        const blockIndex = element.getAttribute('data-block')
        element.addEventListener('click', () => {

            const xhr = new XMLHttpRequest();
            const method = 'DELETE';
            const url = window.location.origin + '/api/tasks/' + id;

            xhr.open(method, url, true);
            xhr.onreadystatechange = () => {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    const status = xhr.status;
                    if (status === 0 || (status >= 200 && status < 400)) {
                        showMessage(status, 'Данныя выдалены паспяхова!', 'Планы, задачы, наводкі', '#' + id)
                        document.getElementById('edit_' + blockIndex + '_Task_' + id).remove()
                    } else {
                        let message = 'Данныя не выдалены!'
                        if (xhr.getResponseHeader("content-type").indexOf('json') > 0) {
                            let obj = JSON.parse(xhr.responseText)
                            message += '</br>' + status + '. ' + obj.description
                        }
                        showMessage(status, message, 'Планы, задачы, наводкі', '#' + id)
                    }
                }
            };
            xhr.send(JSON.stringify());
        })
    }

    function addReportTaskBlock(blockIndex, status, id, content, informant) {
        let html = document.getElementById('createNewReportTaskTemplate').innerHTML
        html = html.replaceAll('BLOCK_INDEX', blockIndex)
        const type = ('' + status === '{{ constant('App\\Entity\\Type\\TaskStatus::TIP') }}') ? 'Наводка:' : ''
        html = html.replaceAll('TASK_TYPE', type)
        html = html.replaceAll('TASK_ID', '' + id)
        html = html.replaceAll('TASK_CONTENT', content)
        const informantContent = (informant !== '') ? 'Інфармант: ' + informant : ''
        html = html.replaceAll('TASK_INFORMANT', informantContent)

        let element = document.getElementById('all_' + blockIndex + '_Tasks')
        element.insertAdjacentHTML('afterbegin', html)

        let newReportTask = document.getElementById('edit_' + blockIndex + '_Task_' + id).querySelector('button')
        addActionReportTask(newReportTask)
    }

    window.addEventListener("load", (event) => {
        const saveNewTask = document.getElementById('saveNewTask')
        if (saveNewTask) {
            saveNewTask.addEventListener('click', event => {
                const form = document.getElementById('formAddTaskPlan')
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                    form.classList.add('was-validated')
                } else {
                    const formData = new FormData(form);
                    const formDataObj = Object.fromEntries(formData.entries());
                    let id = ''
                    const isNew = id === ''
                    const index = formDataObj.blockIndex
                    delete formDataObj.blockIndex
                    formDataObj.status = parseInt(formDataObj.status)
                    if (formDataObj.report === '') {
                        formDataObj.report = null
                    }
                    if (formDataObj.reportBlock === '') {
                        formDataObj.reportBlock = null
                    }

                    const xhr = new XMLHttpRequest();
                    const method = isNew ? 'POST' : 'PATCH';
                    const url = window.location.origin + '/api/tasks' + (isNew ? '' : '/' + id);

                    xhr.open(method, url, true);
                    xhr.setRequestHeader("Content-type", isNew ? "application/ld+json" : "application/merge-patch+json");
                    xhr.onreadystatechange = () => {
                        if (xhr.readyState === XMLHttpRequest.DONE) {
                            const status = xhr.status;
                            if (status === 0 || (status >= 200 && status < 400)) {
                                let obj = JSON.parse(xhr.responseText)
                                if (isNew) {
                                    id = obj.id
                                }
                                const statusText = form.querySelector('select[name="status"]').selectedOptions[0].text
                                const informant = '-'
                                addReportTaskBlock(index, statusText, id, obj.content, informant)
                                showMessage(status, 'Данныя захаваліся паспяхова!', 'Планы, задачы, наводкі', '#' + id)
                            } else {
                                let message = 'Данныя не захаваліся!'
                                if (xhr.getResponseHeader("content-type").indexOf('json') > 0) {
                                    let obj = JSON.parse(xhr.responseText)
                                    message += '</br>' + status + '. ' + obj.description
                                }
                                showMessage(status, message, 'Планы, задачы, наводкі', '#' + id)
                            }

                            const modalElement = document.getElementById('addTaskPlanModal')
                            bootstrap.Modal.getInstance(modalElement).hide()

                            form.classList.remove('was-validated')
                            form.reset()
                        }
                    };
                    xhr.send(JSON.stringify(formDataObj));
                }
            })
        }
    });
</script>
